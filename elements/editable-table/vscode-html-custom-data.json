{
  "version": 1,
  "tags": [
    {
      "name": "editable-table",
      "description": "`editable-table`\nAn editor interface for tables that toggles between view mode.\n\n### Styling\n\n`<editable-table>` provides following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--editable-table-font-size` | Main size for  table. | unset;\n`--editable-table-secondary-font-size` | Smaller font size for table for minor UI elements. | 12px;\n`--editable-table-caption-font-size` | Font size for table caption. | var(--editable-table-font-size);\n`--editable-table-font-family` | Main font-family for table. | inherit;\n`--editable-table-secondary-font-family` | Secondary font-familt for table's minor UI elements | \"Roboto\", \"Noto\", sans-serif;\n`--editable-table-light-weight` | lightest table font-weight, for minor UI elements. | 200;\n`--editable-table-medium-weight` | default table font-weight. | 300;\n`--editable-table-heavy-weight` | heaviest table font-weight, for emphasis and table  caption. | 600;\n`--editable-table-color` | table text color. | #222;\n`--editable-table-bg-color` | table background color. | #fff;\n`--editable-table-caption-color` | caption text color. | var(--editable-table-color);\n`--editable-table-caption-bg-color` | caption background color. | #fff;\n`--editable-table-heading-color` | row/column heading text color. | #000;\n`--editable-table-heading-bg-color` | row/column heading background color. | #e8e8e8;\n`--editable-table-stripe-bg-color` | background color for alternating row striping. | #f0f0f0;\n`--editable-table-border-width` | border width for table. | 1px;\n`--editable-table-border-style` | border style for table. | solid;\n`--editable-table-border-color` | border color for table. | #999;\n`--editable-table-border` | table border. | var(--editable-table-border-width) var(--editable-table-border-style) var(--editable-table-border-color);\n`--editable-table-button-color` | default text color of toggle buttons. | var(--editable-table-border-color);\n`--editable-table-button-bg-color` | default background color of toggle buttons. | var(--editable-table-bg-color);\n`--editable-table-button-toggled-color` | text color of toggle buttons when toggled. | var(--editable-table-color);\n`--editable-table-button-toggled-bg-color` | background color of toggle buttons when toggled. | var(--editable-table-bg-color);\n`--editable-table-button-hover-color` | text color of toggle buttons when hovered or focused. | var(--editable-table-button-color);\n`--editable-table-button-hover-bg-color` | background color of toggle buttons when hovered or focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-toggled-hover-color` | text color of toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-color);\n`--editable-table-button-toggled-hover-bg-color` | background color of toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-disabled-color` | text color of toggle buttons when disabled. | var(--editable-table-border-color);\n`--editable-table-button-disabled-bg-color` | background color of toggle buttons when disabled. | var(--editable-table-heading-bg-color);\n`--editable-table-row-horizontal-padding` | Default horizontal padding for cells. | 6px;\n`--editable-table-row-horizontal-padding-condensed` | Smaller horizontal padding for cells. | 4px;\n`--editable-table-row-vertical-padding` | Default vertical padding for cells (determines row hight and whitespace). | 10px;\n`--editable-table-row-vertical-padding-condensed` | Smaller vertical padding for cells (determines condensed row hight and whitespace). | 2px;\n`--editable-table-style-stripe` | Styles applied to striped rows. | { background-color: var(--editable-table-stripe-bg-color); }\n`--editable-table-style-column-header` | Styles applied to column headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); background-color: var(--editable-table-heading-bg-color); }\n`--editable-table-style-row-header` | Styles applied to row headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); }\n`--editable-table-style-footer` | Styles applied to table footer. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); border-top: 3px solid var(--editable-table-color); }\n\nEvents:\n\n  * `toggle-edit-mode` {`CustomEvent<this>`} - \n\n  * `csv-downloaded` {`CustomEvent<{ table: this; data: string; filename: string; }>`} - Fires when transcript is printed\n\n  * `table-printed` {`CustomEvent<this>`} - Fires when transcript is printed\n\nAttributes:\n\n  * `hide-numeric-styles` {`boolean`} - Hide numeric styling option.\n\n  * `edit-mode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\n  * `hide-bordered` {`boolean`} - Hide borders table styles menu option\n\n  * `hide-condensed` {`boolean`} - Hide condensed table styles menu option\n\n  * `hide-downloadable` {`boolean`} - Hide downloadable menu option\n\n  * `hide-filter` {`boolean`} - Hide filtering option.\n\n  * `hide-responsive` {`boolean`} - Hide responsive table styles menu option\n\n  * `hide-printable` {`boolean`} - Hide printable menu option\n\n  * `hide-sort` {`boolean`} - Hide sorting option.\n\n  * `hide-striped` {`boolean`} - Hide striped table styles menu option\n\n  * `config` {`any[]`} - text editor config\n\n  * `caption` {`string`} - a table caption\n\n  * `csv-data` {`string`} - Raw data pulled in from csv file.\n\n  * `column-header` {`boolean`} - Display first row as a column header.\n\n  * `data` {`any[]`} - raw data\n\n  * `footer` {`boolean`} - Display last row as a column footer.\n\n  * `row-header` {`boolean`} - Display first column as a row header.\n\n  * `data-csv` {`string`} - Location of CSV file.\n\nProperties:\n\n  * `hideNumericStyles` {`boolean`} - Hide numeric styling option.\n\n  * `hideSortFilter` {`boolean`} - hides data sorting and filtering feature set\n\n  * `hideDisplay` {`boolean`} - hides display feature set\n\n  * `editMode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\n  * `hideBordered` {`boolean`} - Hide borders table styles menu option\n\n  * `hideCondensed` {`boolean`} - Hide condensed table styles menu option\n\n  * `hideDownloadable` {`boolean`} - Hide downloadable menu option\n\n  * `hideFilter` {`boolean`} - Hide filtering option.\n\n  * `hideResponsive` {`boolean`} - Hide responsive table styles menu option\n\n  * `hidePrintable` {`boolean`} - Hide printable menu option\n\n  * `hideSort` {`boolean`} - Hide sorting option.\n\n  * `hideStriped` {`boolean`} - Hide striped table styles menu option\n\n  * `config` {`any[]`} - text editor config\n\n  * `caption` {`string`} - a table caption\n\n  * `csvData` {`string`} - Raw data pulled in from csv file.\n\n  * `thead` {`any[]`} - Rows in <thead>\n\n  * `tbody` {`any[]`} - Rows in <tbody>\n\n  * `tfoot` {`any[]`} - Rows in <tfoot>\n\n  * `columnHeader` {`boolean`} - Display first row as a column header.\n\n  * `downloadable` {`boolean`} - \n\n  * `data` {`any[]`} - raw data\n\n  * `filter` {`boolean`} - \n\n  * `footer` {`boolean`} - Display last row as a column footer.\n\n  * `rowHeader` {`boolean`} - Display first column as a row header.\n\n  * `sort` {`boolean`} - \n\n  * `dataCsv` {`string`} - Location of CSV file.",
      "attributes": [
        {
          "name": "hide-numeric-styles",
          "description": "`hide-numeric-styles` {`boolean`} - Hide numeric styling option.\n\nProperty: hideNumericStyles",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-bordered",
          "description": "`hide-bordered` {`boolean`} - Hide borders table styles menu option\n\nProperty: hideBordered\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-condensed",
          "description": "`hide-condensed` {`boolean`} - Hide condensed table styles menu option\n\nProperty: hideCondensed\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-downloadable",
          "description": "`hide-downloadable` {`boolean`} - Hide downloadable menu option\n\nProperty: hideDownloadable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-filter",
          "description": "`hide-filter` {`boolean`} - Hide filtering option.\n\nProperty: hideFilter\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-responsive",
          "description": "`hide-responsive` {`boolean`} - Hide responsive table styles menu option\n\nProperty: hideResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-printable",
          "description": "`hide-printable` {`boolean`} - Hide printable menu option\n\nProperty: hidePrintable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-sort",
          "description": "`hide-sort` {`boolean`} - Hide sorting option.\n\nProperty: hideSort\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-striped",
          "description": "`hide-striped` {`boolean`} - Hide striped table styles menu option\n\nProperty: hideStriped\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "config",
          "description": "`config` {`any[]`} - text editor config\n\nProperty: config\n\nDefault: [object Object],[object Object],[object Object],[object Object]"
        },
        {
          "name": "caption",
          "description": "`caption` {`string`} - a table caption\n\nProperty: caption\n\nDefault: "
        },
        {
          "name": "csv-data",
          "description": "`csv-data` {`string`} - Raw data pulled in from csv file.\n\nProperty: csvData"
        },
        {
          "name": "column-header",
          "description": "`column-header` {`boolean`} - Display first row as a column header.\n\nProperty: columnHeader\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "`data` {`any[]`} - raw data\n\nProperty: data\n\nDefault: "
        },
        {
          "name": "footer",
          "description": "`footer` {`boolean`} - Display last row as a column footer.\n\nProperty: footer\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "row-header",
          "description": "`row-header` {`boolean`} - Display first column as a row header.\n\nProperty: rowHeader\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "data-csv",
          "description": "`data-csv` {`string`} - Location of CSV file.\n\nProperty: dataCsv\n\nDefault: undefined"
        },
        {
          "name": "ontoggle-edit-mode",
          "description": "`toggle-edit-mode` {`CustomEvent<this>`} - "
        },
        {
          "name": "oncsv-downloaded",
          "description": "`csv-downloaded` {`CustomEvent<{ table: this; data: string; filename: string; }>`} - Fires when transcript is printed"
        },
        {
          "name": "ontable-printed",
          "description": "`table-printed` {`CustomEvent<this>`} - Fires when transcript is printed"
        }
      ]
    },
    {
      "name": "editable-table-display",
      "description": "`editable-table-display`\n`An editor interface for editable-table\n\nEvents:\n\n  * `change` {`CustomEvent<any>`} - \n\n  * `csv-downloaded` {`CustomEvent<{ table: this; data: string; filename: string; }>`} - Fires when transcript is printed\n\n  * `table-printed` {`CustomEvent<this>`} - Fires when transcript is printed\n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `filter-column` {`number`} - Index of current filter column\n\n  * `filter-case-sensitive` {`boolean`} - whether filter is case sensitive\n\n  * `filtered` {`boolean`} - Whether table is filtered\n\n  * `filter-text` {`string`} - Text for Filtering\n\n  * `selected` {`number`} - Selected column to display when in responsive mode\n\n  * `sort-mode` {`string`} - Sort mode: ascending, descending or none\n\n  * `sort-column` {`number`} - Index of current sort column\n\n  * `filter-contains` {`boolean`} - whether column only needs to contain filter text\ninstead of default requiriwhich requires an exact match\n\n  * `caption` {`string`} - a table caption\n\n  * `csv-data` {`string`} - Raw data pulled in from csv file.\n\n  * `column-header` {`boolean`} - Display first row as a column header.\n\n  * `data` {`any[]`} - raw data\n\n  * `footer` {`boolean`} - Display last row as a column footer.\n\n  * `row-header` {`boolean`} - Display first column as a row header.\n\n  * `data-csv` {`string`} - Location of CSV file.\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `filterColumn` {`number`} - Index of current filter column\n\n  * `filterCaseSensitive` {`boolean`} - whether filter is case sensitive\n\n  * `filtered` {`boolean`} - Whether table is filtered\n\n  * `filterText` {`string`} - Text for Filtering\n\n  * `hidden` {`boolean`} - Hides table if it has no data\n\n  * `options` {`{ alt: never; value: number; }[][]`} - Gets columns in `<thead>`\n\n  * `selected` {`number`} - Selected column to display when in responsive mode\n\n  * `sortMode` {`string`} - Sort mode: ascending, descending or none\n\n  * `sortColumn` {`number`} - Index of current sort column\n\n  * `filterContains` {`boolean`} - whether column only needs to contain filter text\ninstead of default requiriwhich requires an exact match\n\n  * `_observer` - \n\n  * `caption` {`string`} - a table caption\n\n  * `csvData` {`string`} - Raw data pulled in from csv file.\n\n  * `thead` {`any[]`} - Rows in <thead>\n\n  * `tbody` {`any[]`} - Rows in <tbody>\n\n  * `tfoot` {`any[]`} - Rows in <tfoot>\n\n  * `columnHeader` {`boolean`} - Display first row as a column header.\n\n  * `downloadable` {`boolean`} - \n\n  * `data` {`any[]`} - raw data\n\n  * `filter` {`boolean`} - \n\n  * `footer` {`boolean`} - Display last row as a column footer.\n\n  * `rowHeader` {`boolean`} - Display first column as a row header.\n\n  * `sort` {`boolean`} - \n\n  * `dataCsv` {`string`} - Location of CSV file.\n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "filter-column",
          "description": "`filter-column` {`number`} - Index of current filter column\n\nProperty: filterColumn"
        },
        {
          "name": "filter-case-sensitive",
          "description": "`filter-case-sensitive` {`boolean`} - whether filter is case sensitive\n\nProperty: filterCaseSensitive",
          "valueSet": "v"
        },
        {
          "name": "filtered",
          "description": "`filtered` {`boolean`} - Whether table is filtered\n\nProperty: filtered",
          "valueSet": "v"
        },
        {
          "name": "filter-text",
          "description": "`filter-text` {`string`} - Text for Filtering\n\nProperty: filterText"
        },
        {
          "name": "selected",
          "description": "`selected` {`number`} - Selected column to display when in responsive mode\n\nProperty: selected\n\nDefault: 1"
        },
        {
          "name": "sort-mode",
          "description": "`sort-mode` {`string`} - Sort mode: ascending, descending or none\n\nProperty: sortMode\n\nDefault: none"
        },
        {
          "name": "sort-column",
          "description": "`sort-column` {`number`} - Index of current sort column\n\nProperty: sortColumn\n\nDefault: -1"
        },
        {
          "name": "filter-contains",
          "description": "`filter-contains` {`boolean`} - whether column only needs to contain filter text\ninstead of default requiriwhich requires an exact match\n\nProperty: filterContains\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "caption",
          "description": "`caption` {`string`} - a table caption\n\nProperty: caption\n\nDefault: null"
        },
        {
          "name": "csv-data",
          "description": "`csv-data` {`string`} - Raw data pulled in from csv file.\n\nProperty: csvData"
        },
        {
          "name": "column-header",
          "description": "`column-header` {`boolean`} - Display first row as a column header.\n\nProperty: columnHeader\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "`data` {`any[]`} - raw data\n\nProperty: data\n\nDefault: "
        },
        {
          "name": "footer",
          "description": "`footer` {`boolean`} - Display last row as a column footer.\n\nProperty: footer\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "row-header",
          "description": "`row-header` {`boolean`} - Display first column as a row header.\n\nProperty: rowHeader\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "data-csv",
          "description": "`data-csv` {`string`} - Location of CSV file.\n\nProperty: dataCsv\n\nDefault: undefined"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<any>`} - "
        },
        {
          "name": "oncsv-downloaded",
          "description": "`csv-downloaded` {`CustomEvent<{ table: this; data: string; filename: string; }>`} - Fires when transcript is printed"
        },
        {
          "name": "ontable-printed",
          "description": "`table-printed` {`CustomEvent<this>`} - Fires when transcript is printed"
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "editable-table-editor-rowcol",
      "description": "`editable-table-editor-rowcol`\nA header label and menu for inserting and deleting a row or a column of editable-table interface (editable-table.html).\n\nEvents:\n\n  * `rowcol-action` {`CustomEvent<{ insert: boolean; row: any; index: number; }>`} - \n\n  * `rowcol-menuopen` {`CustomEvent<{ insert: boolean; row: any; index: any; }>`} - \n\n  * `close` {`CustomEvent<Event>`} - Fires when menu is closed\n\n  * `open` {`CustomEvent<Event>`} - Fires when menu is opened\n\n  * `item-click` {`CustomEvent<Event>`} - \n\nAttributes:\n\n  * `index` {`number`} - Index of row or column\n\n  * `row` {`boolean`} - Whether menu button controls a row\n\n  * `currentItem` - Whether toggle is disabled\n\n  * `disabled` {`boolean`} - Whether toggle is disabled\n\n  * `expanded` {`boolean`} - Whether toggle is disabled\n\n  * `focused` {`boolean`} - Whether button is toggled\n\n  * `hovered` {`boolean`} - Whether button is toggled\n\n  * `__menuItems` {`any[]`} - menu items in array form to move from prev to next\n\n  * `position` {`string`} - Positions list to top, right, bottom, left of its content.\n\n  * `position-align` {`string`} - Aligns list at start, or end fo target. Default is centered.\n\n  * `offset` {`number`} - spacing between top of list and menu button\n\nProperties:\n\n  * `index` {`number`} - Index of row or column\n\n  * `row` {`boolean`} - Whether menu button controls a row\n\n  * `controls` {`string`} - Gets first cell that menu controls\n\n  * `label` - Gets row or column label based on type\n\n  * `labelInfo` {`TemplateResult<1>`} - get cell label\n\n  * `type` {`\"Row\" | \"Column\"`} - Gets row or column type\n\n  * `currentItem` - Whether toggle is disabled\n\n  * `disabled` {`boolean`} - Whether toggle is disabled\n\n  * `expanded` {`boolean`} - Whether toggle is disabled\n\n  * `focused` {`boolean`} - Whether button is toggled\n\n  * `hovered` {`boolean`} - Whether button is toggled\n\n  * `menuTemplate` {`TemplateResult<1>`} - template for dropdown menu\n\n  * `buttonTemplate` {`TemplateResult<1>`} - template for button\n\n  * `listItemTemplate` {`TemplateResult<1>`} - template for slotted list items\n\n  * `keyCode` {`{ TAB: number; RETURN: number; ESC: number; SPACE: number; PAGEUP: number; PAGEDOWN: number; END: number; HOME: number; LEFT: number; UP: number; RIGHT: number; DOWN: number; }`} - key code translations as object\n\n  * `__menuItems` {`any[]`} - menu items in array form to move from prev to next\n\n  * `position` {`string`} - Positions list to top, right, bottom, left of its content.\n\n  * `positionAlign` {`string`} - Aligns list at start, or end fo target. Default is centered.\n\n  * `offset` {`number`} - spacing between top of list and menu button",
      "attributes": [
        {
          "name": "index",
          "description": "`index` {`number`} - Index of row or column\n\nProperty: index"
        },
        {
          "name": "row",
          "description": "`row` {`boolean`} - Whether menu button controls a row\n\nProperty: row",
          "valueSet": "v"
        },
        {
          "name": "currentItem",
          "description": "`currentItem` - Whether toggle is disabled\n\nProperty: currentItem"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Whether toggle is disabled\n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "expanded",
          "description": "`expanded` {`boolean`} - Whether toggle is disabled\n\nProperty: expanded",
          "valueSet": "v"
        },
        {
          "name": "focused",
          "description": "`focused` {`boolean`} - Whether button is toggled\n\nProperty: focused",
          "valueSet": "v"
        },
        {
          "name": "hovered",
          "description": "`hovered` {`boolean`} - Whether button is toggled\n\nProperty: hovered",
          "valueSet": "v"
        },
        {
          "name": "__menuItems",
          "description": "`__menuItems` {`any[]`} - menu items in array form to move from prev to next\n\nProperty: __menuItems\n\nDefault: "
        },
        {
          "name": "position",
          "description": "`position` {`string`} - Positions list to top, right, bottom, left of its content.\n\nProperty: position\n\nDefault: bottom"
        },
        {
          "name": "position-align",
          "description": "`position-align` {`string`} - Aligns list at start, or end fo target. Default is centered.\n\nProperty: positionAlign\n\nDefault: start"
        },
        {
          "name": "offset",
          "description": "`offset` {`number`} - spacing between top of list and menu button\n\nProperty: offset\n\nDefault: 0"
        },
        {
          "name": "onrowcol-action",
          "description": "`rowcol-action` {`CustomEvent<{ insert: boolean; row: any; index: number; }>`} - "
        },
        {
          "name": "onrowcol-menuopen",
          "description": "`rowcol-menuopen` {`CustomEvent<{ insert: boolean; row: any; index: any; }>`} - "
        },
        {
          "name": "onclose",
          "description": "`close` {`CustomEvent<Event>`} - Fires when menu is closed"
        },
        {
          "name": "onopen",
          "description": "`open` {`CustomEvent<Event>`} - Fires when menu is opened"
        },
        {
          "name": "onitem-click",
          "description": "`item-click` {`CustomEvent<Event>`} - "
        }
      ]
    },
    {
      "name": "editable-table-editor-toggle",
      "description": "`editable-table-editor-toggle`\nA toggle button for an property in editable-table interface (editable-table.html).\n\nEvents:\n\n  * `change` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `disabled` {`boolean`} - Whether toggle is disabled\n\n  * `controls` {`string`} - Table id for accessibility\n\n  * `id` {`string`} - Button id that matches table property to toggle\n\n  * `icon` {`string`} - Button icon\n\n  * `label` {`string`} - Button label\n\n  * `toggled` {`boolean`} - Whether button is toggled\n\nProperties:\n\n  * `disabled` {`boolean`} - Whether toggle is disabled\n\n  * `controls` {`string`} - Table id for accessibility\n\n  * `id` {`string`} - Button id that matches table property to toggle\n\n  * `icon` {`string`} - Button icon\n\n  * `label` {`string`} - Button label\n\n  * `toggled` {`boolean`} - Whether button is toggled",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Whether toggle is disabled\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "controls",
          "description": "`controls` {`string`} - Table id for accessibility\n\nProperty: controls\n\nDefault: table"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - Button id that matches table property to toggle\n\nProperty: id\n\nDefault: null"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - Button icon\n\nProperty: icon\n\nDefault: null"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - Button label\n\nProperty: label\n\nDefault: null"
        },
        {
          "name": "toggled",
          "description": "`toggled` {`boolean`} - Whether button is toggled\n\nProperty: toggled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "editable-table-filter",
      "description": "`editable-table-editor-filter`\n`Displays a cell in editable-table-display mode (editable-table-display.html) as a filter button.`\n\nEvents:\n\n  * `toggle-filter` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `column-index` {`number`} - Index of column\n\n  * `filtered` {`boolean`} - Whether column is filtered\n\n  * `text` {`string`} - Column header text\n\nProperties:\n\n  * `columnIndex` {`number`} - Index of column\n\n  * `filtered` {`boolean`} - Whether column is filtered\n\n  * `text` {`string`} - Column header text",
      "attributes": [
        {
          "name": "column-index",
          "description": "`column-index` {`number`} - Index of column\n\nProperty: columnIndex\n\nDefault: null"
        },
        {
          "name": "filtered",
          "description": "`filtered` {`boolean`} - Whether column is filtered\n\nProperty: filtered\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "text",
          "description": "`text` {`string`} - Column header text\n\nProperty: text\n\nDefault: "
        },
        {
          "name": "ontoggle-filter",
          "description": "`toggle-filter` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "editable-table-sort",
      "description": "`editable-table-editor-sort`\nA column header that functions as a three-state sort button (no sort, sort ascending, sort descending) for table-editor-display mode (table-editor-display.html).\n\nEvents:\n\n  * `change-sort-mode` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `column-index` {`number`} - Sort ascending, descending or none\n\n  * `sort-mode` {`string`} - Sort mode: ascending, descending or none\n\n  * `sort-column` {`number`} - Index of current sort column\n\nProperties:\n\n  * `columnIndex` {`number`} - Sort ascending, descending or none\n\n  * `sorting` {`boolean`} - Whether column is being sorted\n\n  * `sortMode` {`string`} - Sort mode: ascending, descending or none\n\n  * `sortColumn` {`number`} - Index of current sort column",
      "attributes": [
        {
          "name": "column-index",
          "description": "`column-index` {`number`} - Sort ascending, descending or none\n\nProperty: columnIndex"
        },
        {
          "name": "sort-mode",
          "description": "`sort-mode` {`string`} - Sort mode: ascending, descending or none\n\nProperty: sortMode\n\nDefault: none"
        },
        {
          "name": "sort-column",
          "description": "`sort-column` {`number`} - Index of current sort column\n\nProperty: sortColumn\n\nDefault: -1"
        },
        {
          "name": "onchange-sort-mode",
          "description": "`change-sort-mode` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "editable-table",
      "description": "`editable-table`\nAn editor interface for tables that toggles between view mode.\n\n### Styling\n\n`<editable-table>` provides following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--editable-table-font-size` | Main size for  table. | unset;\n`--editable-table-secondary-font-size` | Smaller font size for table for minor UI elements. | 12px;\n`--editable-table-caption-font-size` | Font size for table caption. | var(--editable-table-font-size);\n`--editable-table-font-family` | Main font-family for table. | inherit;\n`--editable-table-secondary-font-family` | Secondary font-familt for table's minor UI elements | \"Roboto\", \"Noto\", sans-serif;\n`--editable-table-light-weight` | lightest table font-weight, for minor UI elements. | 200;\n`--editable-table-medium-weight` | default table font-weight. | 300;\n`--editable-table-heavy-weight` | heaviest table font-weight, for emphasis and table  caption. | 600;\n`--editable-table-color` | table text color. | #222;\n`--editable-table-bg-color` | table background color. | #fff;\n`--editable-table-caption-color` | caption text color. | var(--editable-table-color);\n`--editable-table-caption-bg-color` | caption background color. | #fff;\n`--editable-table-heading-color` | row/column heading text color. | #000;\n`--editable-table-heading-bg-color` | row/column heading background color. | #e8e8e8;\n`--editable-table-stripe-bg-color` | background color for alternating row striping. | #f0f0f0;\n`--editable-table-border-width` | border width for table. | 1px;\n`--editable-table-border-style` | border style for table. | solid;\n`--editable-table-border-color` | border color for table. | #999;\n`--editable-table-border` | table border. | var(--editable-table-border-width) var(--editable-table-border-style) var(--editable-table-border-color);\n`--editable-table-button-color` | default text color of toggle buttons. | var(--editable-table-border-color);\n`--editable-table-button-bg-color` | default background color of toggle buttons. | var(--editable-table-bg-color);\n`--editable-table-button-toggled-color` | text color of toggle buttons when toggled. | var(--editable-table-color);\n`--editable-table-button-toggled-bg-color` | background color of toggle buttons when toggled. | var(--editable-table-bg-color);\n`--editable-table-button-hover-color` | text color of toggle buttons when hovered or focused. | var(--editable-table-button-color);\n`--editable-table-button-hover-bg-color` | background color of toggle buttons when hovered or focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-toggled-hover-color` | text color of toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-color);\n`--editable-table-button-toggled-hover-bg-color` | background color of toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-disabled-color` | text color of toggle buttons when disabled. | var(--editable-table-border-color);\n`--editable-table-button-disabled-bg-color` | background color of toggle buttons when disabled. | var(--editable-table-heading-bg-color);\n`--editable-table-row-horizontal-padding` | Default horizontal padding for cells. | 6px;\n`--editable-table-row-horizontal-padding-condensed` | Smaller horizontal padding for cells. | 4px;\n`--editable-table-row-vertical-padding` | Default vertical padding for cells (determines row hight and whitespace). | 10px;\n`--editable-table-row-vertical-padding-condensed` | Smaller vertical padding for cells (determines condensed row hight and whitespace). | 2px;\n`--editable-table-style-stripe` | Styles applied to striped rows. | { background-color: var(--editable-table-stripe-bg-color); }\n`--editable-table-style-column-header` | Styles applied to column headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); background-color: var(--editable-table-heading-bg-color); }\n`--editable-table-style-row-header` | Styles applied to row headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); }\n`--editable-table-style-footer` | Styles applied to table footer. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); border-top: 3px solid var(--editable-table-color); }\n\nEvents:\n\n  * `toggle-edit-mode` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `hide-numeric-styles` {`boolean`} - Hide numeric styling option.\n\n  * `edit-mode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\n  * `hide-bordered` {`boolean`} - Hide borders table styles menu option\n\n  * `hide-condensed` {`boolean`} - Hide condensed table styles menu option\n\n  * `hide-downloadable` {`boolean`} - Hide downloadable menu option\n\n  * `hide-filter` {`boolean`} - Hide filtering option.\n\n  * `hide-responsive` {`boolean`} - Hide responsive table styles menu option\n\n  * `hide-printable` {`boolean`} - Hide printable menu option\n\n  * `hide-sort` {`boolean`} - Hide sorting option.\n\n  * `hide-striped` {`boolean`} - Hide striped table styles menu option\n\n  * `config` {`any[]`} - text editor config\n\nProperties:\n\n  * `hideNumericStyles` {`boolean`} - Hide numeric styling option.\n\n  * `hideSortFilter` {`boolean`} - hides data sorting and filtering feature set\n\n  * `hideDisplay` {`boolean`} - hides display feature set\n\n  * `editMode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\n  * `hideBordered` {`boolean`} - Hide borders table styles menu option\n\n  * `hideCondensed` {`boolean`} - Hide condensed table styles menu option\n\n  * `hideDownloadable` {`boolean`} - Hide downloadable menu option\n\n  * `hideFilter` {`boolean`} - Hide filtering option.\n\n  * `hideResponsive` {`boolean`} - Hide responsive table styles menu option\n\n  * `hidePrintable` {`boolean`} - Hide printable menu option\n\n  * `hideSort` {`boolean`} - Hide sorting option.\n\n  * `caption` {`string`} - \n\n  * `hideStriped` {`boolean`} - Hide striped table styles menu option\n\n  * `config` {`any[]`} - text editor config",
      "attributes": [
        {
          "name": "hide-numeric-styles",
          "description": "`hide-numeric-styles` {`boolean`} - Hide numeric styling option.\n\nProperty: hideNumericStyles",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - Is table in edit-mode? Default is false (display mode).\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-bordered",
          "description": "`hide-bordered` {`boolean`} - Hide borders table styles menu option\n\nProperty: hideBordered\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-condensed",
          "description": "`hide-condensed` {`boolean`} - Hide condensed table styles menu option\n\nProperty: hideCondensed\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-downloadable",
          "description": "`hide-downloadable` {`boolean`} - Hide downloadable menu option\n\nProperty: hideDownloadable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-filter",
          "description": "`hide-filter` {`boolean`} - Hide filtering option.\n\nProperty: hideFilter\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-responsive",
          "description": "`hide-responsive` {`boolean`} - Hide responsive table styles menu option\n\nProperty: hideResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-printable",
          "description": "`hide-printable` {`boolean`} - Hide printable menu option\n\nProperty: hidePrintable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-sort",
          "description": "`hide-sort` {`boolean`} - Hide sorting option.\n\nProperty: hideSort\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-striped",
          "description": "`hide-striped` {`boolean`} - Hide striped table styles menu option\n\nProperty: hideStriped\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "config",
          "description": "`config` {`any[]`} - text editor config\n\nProperty: config\n\nDefault: [object Object],[object Object],[object Object],[object Object]"
        },
        {
          "name": "ontoggle-edit-mode",
          "description": "`toggle-edit-mode` {`CustomEvent<this>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}
